{"attributes": {"name": "Shape", "packageName": "ae.chart.model.layout", "mixins": "qx.data.marshal.MEventBubbling", "superClass": "qx.core.Object", "fullName": "ae.chart.model.layout.Shape", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Shape</p>"}, "type": "desc"}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeFillcolor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #fillcolor}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeLayer"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #layer}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeLine"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #line}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpacity"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #opacity}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changePath"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #path}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeType"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #type}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeX0"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #x0}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeX1"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #x1}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeXref"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #xref}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeY0"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #y0}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeY1"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #y1}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeYref"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #yref}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 134, "name": "_apply"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "ae.chart.model.layout.Shape#opacity"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#layer"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#xref"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#yref"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#fillcolor"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#y0"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#y1"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#path"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#line"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#x1"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#type"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Shape#x0"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the properties <code>fillcolor</code>, <code>layer</code>, <code>line</code>, <code>opacity</code>, <code>path</code>, <code>type</code>, <code>x0</code>, <code>x1</code>, <code>xref</code>, <code>y0</code>, <code>y1</code> and <code>yref</code>.</p>\n\n<p>For further details take a look at the property definitions: {@link #fillcolor}, {@link #layer}, {@link #line}, {@link #opacity}, {@link #path}, {@link #type}, {@link #x0}, {@link #x1}, {@link #xref}, {@link #y0}, {@link #y1} and {@link #yref}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getFillcolor", "fromProperty": "fillcolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>fillcolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fillcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>fillcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLayer", "fromProperty": "layer"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>layer</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #layer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>layer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getLine", "fromProperty": "line"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>line</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #line}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>line</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>opacity</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getPath", "fromProperty": "path"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>path</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #path}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>path</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getType", "fromProperty": "type"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>type</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #type}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>type</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getX0", "fromProperty": "x0"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>x0</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>x0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getX1", "fromProperty": "x1"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>x1</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>x1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getXref", "fromProperty": "xref"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>xref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #xref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>xref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getY0", "fromProperty": "y0"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>y0</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>y0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getY1", "fromProperty": "y1"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>y1</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>y1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getYref", "fromProperty": "yref"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>yref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #yref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>yref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initFillcolor", "fromProperty": "fillcolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>fillcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>fillcolor</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #fillcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLayer", "fromProperty": "layer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>layer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>layer</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #layer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initLine", "fromProperty": "line"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>line</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>line</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #line}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>opacity</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initPath", "fromProperty": "path"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>path</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>path</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #path}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initType", "fromProperty": "type"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>type</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>type</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #type}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initX0", "fromProperty": "x0"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>x0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>x0</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #x0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initX1", "fromProperty": "x1"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>x1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>x1</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #x1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initXref", "fromProperty": "xref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>xref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>xref</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #xref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initY0", "fromProperty": "y0"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>y0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>y0</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #y0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initY1", "fromProperty": "y1"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>y1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>y1</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #y1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initYref", "fromProperty": "yref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>yref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>yref</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #yref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetFillcolor", "fromProperty": "fillcolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>fillcolor</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #fillcolor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLayer", "fromProperty": "layer"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>layer</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #layer}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetLine", "fromProperty": "line"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>line</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #line}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>opacity</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetPath", "fromProperty": "path"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>path</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #path}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetType", "fromProperty": "type"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>type</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #type}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetX0", "fromProperty": "x0"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>x0</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #x0}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetX1", "fromProperty": "x1"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>x1</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #x1}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetXref", "fromProperty": "xref"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>xref</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #xref}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetY0", "fromProperty": "y0"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>y0</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #y0}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetY1", "fromProperty": "y1"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>y1</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #y1}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetYref", "fromProperty": "yref"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>yref</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #yref}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setFillcolor", "fromProperty": "fillcolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>fillcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>fillcolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #fillcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLayer", "fromProperty": "layer"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>layer</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>layer</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #layer}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setLine", "fromProperty": "line"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>line</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>line</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #line}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>opacity</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setPath", "fromProperty": "path"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>path</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>path</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #path}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setType", "fromProperty": "type"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>type</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>type</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #type}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setX0", "fromProperty": "x0"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>x0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>x0</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setX1", "fromProperty": "x1"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>x1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>x1</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setXref", "fromProperty": "xref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>xref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>xref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #xref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setY0", "fromProperty": "y0"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>y0</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>y0</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y0}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setY1", "fromProperty": "y1"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>y1</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>y1</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y1}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setYref", "fromProperty": "yref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>yref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>yref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #yref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "fillcolor", "defaultValue": "\"rgba(0,0,0,0)\"", "event": "changeFillcolor", "propertyType": "new", "apply": "_apply", "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the color filling the shape&#8217;s interior.</p>"}, "type": "desc"}]}, {"attributes": {"name": "layer", "defaultValue": "\"above\"", "propertyType": "new", "possibleValues": "\"below\",\"above\"", "apply": "_apply", "event": "changeLayer"}, "type": "property", "children": [{"attributes": {"text": "<p>Specifies whether shapes are drawn below or above traces.</p>"}, "type": "desc"}]}, {"attributes": {"name": "line", "defaultValue": "null", "check": "ae.chart.model.trace.auxiliary.Line", "allowNull": "true", "propertyType": "new", "apply": "_apply", "event": "changeLine"}, "type": "property", "children": [{"attributes": {"text": "<p>Line</p>"}, "type": "desc"}]}, {"attributes": {"name": "opacity", "defaultValue": "1", "event": "changeOpacity", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the opacity of the shape.</p>"}, "type": "desc"}]}, {"attributes": {"name": "path", "defaultValue": "null", "check": "String", "allowNull": "true", "propertyType": "new", "apply": "_apply", "event": "changePath"}, "type": "property", "children": [{"attributes": {"text": "<p>For `type` <strong>path</strong> &#8211; a valid <span class=\"caps\">SVG</span> path but with the pixel values replaced by data values. There are a few restrictions / quirks only absolute instructions, not relative. So the allowed segments are: M, L, H, V, Q, C, T, S, and Z arcs (A) are not allowed because radius rx and ry are relative. In the future we could consider supporting relative commands, but we would have to decide on how to handle date and log axes. Note that even as is, Q and C Bezier paths that are smooth on linear axes may not be smooth on log, and vice versa. no chained \\&#8220;polybezier\\&#8221; commands &#8211; specify the segment type for each one. On category axes, values are numbers scaled to the serial numbers of categories because using the categories themselves there would be no way to describe fractional positions On data axes: because space and T are both normal components of path strings, we can&#8217;t use either to separate date from time parts. Therefore we&#8217;ll use underscore for this purpose: 2015-02-21_13:45:56.789</p>"}, "type": "desc"}]}, {"attributes": {"name": "type", "defaultValue": "\"line\"", "propertyType": "new", "possibleValues": "\"line\",\"rect\",\"circle\",\"path\"", "apply": "_apply", "event": "changeType"}, "type": "property", "children": [{"attributes": {"text": "<p>Specifies the shape type to be drawn. If <strong>line</strong>, a line is drawn from (`x0`,`y0`) to (`x1`,`y1`) If <strong>circle</strong>, a circle is drawn from ((`x0`<ins>`x1`)/2, (`y0`</ins>`y1`)/2)) with radius (|(`x0`<ins>`x1`)/2 &#8211; `x0`|, |(`y0`</ins>`y1`)/2 -`y0`)|) If <strong>rect</strong>, a rectangle is drawn linking (`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`), (`x0`,`y1`), (`x0`,`y0`) If <strong>path</strong>, draw a custom <span class=\"caps\">SVG</span> path using `path`.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "null", "propertyType": "new", "event": "changeX0", "name": "x0"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the shape&#8217;s starting x position. See `type` for more info.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "null", "propertyType": "new", "event": "changeX1", "name": "x1"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the shape&#8217;s end x position. See `type` for more info.</p>"}, "type": "desc"}]}, {"attributes": {"name": "xref", "defaultValue": "\"paper\"", "event": "changeXref", "propertyType": "new", "apply": "_apply", "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the shape&#8217;s x coordinate axis. If set to an x axis id (e.g. <strong>x</strong> or <strong>x2</strong>), the `x` position refers to an x coordinate If set to <strong>paper</strong>, the `x` position refers to the distance from the left side of the plotting area in normalized coordinates where <strong>0</strong> (<strong>1</strong>) corresponds to the left (right) side. If the axis `type` is <strong>log</strong>, then you must take the log of your desired range. If the axis `type` is <strong>date</strong>, then you must convert the date to unix time in milliseconds.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "null", "propertyType": "new", "event": "changeY0", "name": "y0"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the shape&#8217;s starting y position. See `type` for more info.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "null", "propertyType": "new", "event": "changeY1", "name": "y1"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the shape&#8217;s end y position. See `type` for more info.</p>"}, "type": "desc"}]}, {"attributes": {"name": "yref", "defaultValue": "\"paper\"", "event": "changeYref", "propertyType": "new", "apply": "_apply", "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the annotation&#8217;s y coordinate axis. If set to an y axis id (e.g. <strong>y</strong> or <strong>y2</strong>), the `y` position refers to an y coordinate If set to <strong>paper</strong>, the `y` position refers to the distance from the bottom of the plotting area in normalized coordinates where <strong>0</strong> (<strong>1</strong>) corresponds to the bottom (top).</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 129, "isCtor": true, "name": "ctor"}, "type": "method"}]}]}