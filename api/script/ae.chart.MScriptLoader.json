{"attributes": {"fullName": "ae.chart.MScriptLoader", "packageName": "ae.chart", "type": "mixin", "name": "MScriptLoader", "includer": "ae.chart.ui.Chart"}, "type": "class", "children": [{"attributes": {"text": "<p>Dynamically load non qx scripts on first instance init</p>\n\n<p><span class=\"caps\">TODO</span>: more documentation and tests</p>\n\n<p>Usage example:</p>\n\n<code>\n ... assets ...\n/**\n * @asset(myapp/jquery/*)\n * @asset(myapp/highcharts/*)\n *\n * @ignore(jQuery.*)\n * @ignore(Highcharts.*)\n ...\n\n<p>qx.Class.define(&#8220;myapp.myClass.Chart&#8221;, {\n   extend : myapp.myClass,</p>\n\n<p>include : [\n     visionet.io.MDynamicScriptLoading\n   ],</p>\n\n<p>construct : function()\n   {\n     this.base(arguments);</p>\n\n<p>// other useful contructor code here</p>\n\n<p>// do something usefull if all scripts are loaded\n     this.addListener(&#8216;scriptsReady&#8217;, this.__onScriptsReady, this);</p>\n\n<p>// in debug mode load the uncompressed unobfuscated scripts\n     var src = &#8217;&#8217;;\n     var min = &#8217;.min&#8217;;\n     if (qx.core.Environment.get(&#8220;qx.debug&#8221;)) {\n       src = &#8217;.src&#8217;;\n       min = &#8217;&#8217;;\n     }</p>\n\n<p>// initialize the script loading\n     this._loadScriptsDynamic([\n       &#8220;myapp/jquery/jquery&#8221;<ins>min</ins>&#8221;.js&#8221;,\n       &#8220;myapp/highcharts/highcharts&#8221;<ins>src</ins>&#8221;.js&#8221;,\n       &#8220;myapp/highcharts/highcharts-more&#8221;<ins>src</ins>&#8221;.js&#8221;,\n       &#8220;myapp/highcharts/highcharts-modifications.js&#8221;\n     ]);\n   }\n });</p>\n\n</code>"}, "type": "desc"}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "scriptLoaded"}, "type": "event", "children": [{"attributes": {"text": "<p>fired when a specific script is loaded</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "scriptsLoadingComplete"}, "type": "event", "children": [{"attributes": {"text": "<p>fired when all given scripts are loaded, the first time all scripts reported\nload success</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}, {"attributes": {"name": "scriptsReady"}, "type": "event", "children": [{"attributes": {"text": "<p>fired when all given scripts are loaded, each time loadScriptsDynamic is called</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Event"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "private", "line": 125, "isMixin": true, "name": "__initStateHashes"}, "type": "method", "children": [{"attributes": {"text": "<p>Initialize the state hashes if not yet done</p>"}, "type": "desc"}]}, {"attributes": {"access": "private", "line": 142, "isMixin": true, "name": "__loadScriptArr"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "codeArr"}, "type": "param", "children": [{"attributes": {"text": "<p>an array with the uri names of the scripts</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Chain loading scripts.</p>\n\n<p>Recursively called until the array of scripts is consumed</p>"}, "type": "desc"}]}, {"attributes": {"access": "protected", "line": 116, "isMixin": true, "name": "_loadScriptsDynamic"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "codeArr"}, "type": "param", "children": [{"attributes": {"text": "<p>an array with the uri names of the scripts</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Array"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Load scripts dynamically, typically used in the instance constructor</p>"}, "type": "desc"}]}]}]}