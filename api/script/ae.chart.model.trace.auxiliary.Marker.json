{"attributes": {"name": "Marker", "packageName": "ae.chart.model.trace.auxiliary", "mixins": "qx.data.marshal.MEventBubbling", "superClass": "qx.core.Object", "fullName": "ae.chart.model.trace.auxiliary.Marker", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>An object containing specifications of the marker points.</p>"}, "type": "desc"}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeAutocolorscale"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #autocolorscale}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeCauto"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #cauto}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeCmax"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #cmax}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeCmin"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #cmin}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeColor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #color}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeColorscale"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #colorscale}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeMaxdisplayed"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #maxdisplayed}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOpacity"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #opacity}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeReversescale"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #reversescale}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeShowscale"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #showscale}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSize"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #size}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSizemin"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #sizemin}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSizemode"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #sizemode}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSizeref"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #sizeref}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeSymbol"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #symbol}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 174, "name": "_apply"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#opacity"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#autocolorscale"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#cmin"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#colorscale"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#color"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#maxdisplayed"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#reversescale"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#sizemode"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#cauto"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#showscale"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#sizeref"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#cmax"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#symbol"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#sizemin"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.trace.auxiliary.Marker#size"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the properties <code>autocolorscale</code>, <code>cauto</code>, <code>cmax</code>, <code>cmin</code>, <code>color</code>, <code>colorscale</code>, <code>maxdisplayed</code>, <code>opacity</code>, <code>reversescale</code>, <code>showscale</code>, <code>size</code>, <code>sizemin</code>, <code>sizemode</code>, <code>sizeref</code> and <code>symbol</code>.</p>\n\n<p>For further details take a look at the property definitions: {@link #autocolorscale}, {@link #cauto}, {@link #cmax}, {@link #cmin}, {@link #color}, {@link #colorscale}, {@link #maxdisplayed}, {@link #opacity}, {@link #reversescale}, {@link #showscale}, {@link #size}, {@link #sizemin}, {@link #sizemode}, {@link #sizeref} and {@link #symbol}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>autocolorscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>autocolorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>cauto</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>cauto</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCmax", "fromProperty": "cmax"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>cmax</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cmax}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>cmax</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getCmin", "fromProperty": "cmin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>cmin</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cmin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>cmin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getColor", "fromProperty": "color"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>color</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #color}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>color</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getColorscale", "fromProperty": "colorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>colorscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>colorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getMaxdisplayed", "fromProperty": "maxdisplayed"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>maxdisplayed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #maxdisplayed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>maxdisplayed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>opacity</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>reversescale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>reversescale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>showscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>showscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSize", "fromProperty": "size"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>size</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #size}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>size</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSizemin", "fromProperty": "sizemin"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sizemin</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sizemin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSizemode", "fromProperty": "sizemode"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sizemode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sizemode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSizeref", "fromProperty": "sizeref"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>sizeref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizeref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>sizeref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getSymbol", "fromProperty": "symbol"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>symbol</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #symbol}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>symbol</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>autocolorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>autocolorscale</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>cauto</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>cauto</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCmax", "fromProperty": "cmax"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>cmax</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>cmax</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #cmax}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initCmin", "fromProperty": "cmin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>cmin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>cmin</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #cmin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initColor", "fromProperty": "color"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>color</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>color</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #color}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initColorscale", "fromProperty": "colorscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>colorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>colorscale</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #colorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initMaxdisplayed", "fromProperty": "maxdisplayed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>maxdisplayed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>maxdisplayed</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #maxdisplayed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>opacity</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>reversescale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>reversescale</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>showscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>showscale</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSize", "fromProperty": "size"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>size</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>size</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #size}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSizemin", "fromProperty": "sizemin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sizemin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sizemin</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSizemode", "fromProperty": "sizemode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sizemode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sizemode</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSizeref", "fromProperty": "sizeref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>sizeref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>sizeref</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #sizeref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initSymbol", "fromProperty": "symbol"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>symbol</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>symbol</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #symbol}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>autocolorscale</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>cauto</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>reversescale</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "isShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Check whether the (computed) value of the boolean property <code>showscale</code> equals <code>true</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>Whether the property equals <code>true</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>autocolorscale</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>cauto</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCmax", "fromProperty": "cmax"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>cmax</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #cmax}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetCmin", "fromProperty": "cmin"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>cmin</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #cmin}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetColor", "fromProperty": "color"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>color</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #color}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetColorscale", "fromProperty": "colorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>colorscale</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #colorscale}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetMaxdisplayed", "fromProperty": "maxdisplayed"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>maxdisplayed</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #maxdisplayed}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>opacity</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>reversescale</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>showscale</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSize", "fromProperty": "size"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>size</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #size}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSizemin", "fromProperty": "sizemin"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sizemin</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemin}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSizemode", "fromProperty": "sizemode"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sizemode</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemode}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSizeref", "fromProperty": "sizeref"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>sizeref</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #sizeref}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetSymbol", "fromProperty": "symbol"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>symbol</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #symbol}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>autocolorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>autocolorscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>cauto</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>cauto</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setCmax", "fromProperty": "cmax"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>cmax</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>cmax</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cmax}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setCmin", "fromProperty": "cmin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>cmin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>cmin</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cmin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setColor", "fromProperty": "color"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>color</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>color</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #color}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setColorscale", "fromProperty": "colorscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>colorscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>colorscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #colorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setMaxdisplayed", "fromProperty": "maxdisplayed"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>maxdisplayed</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>maxdisplayed</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #maxdisplayed}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOpacity", "fromProperty": "opacity"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>opacity</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>opacity</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #opacity}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>reversescale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>reversescale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>showscale</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>showscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSize", "fromProperty": "size"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>size</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>size</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #size}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSizemin", "fromProperty": "sizemin"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sizemin</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sizemin</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemin}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSizemode", "fromProperty": "sizemode"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sizemode</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sizemode</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizemode}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSizeref", "fromProperty": "sizeref"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>sizeref</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>sizeref</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #sizeref}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setSymbol", "fromProperty": "symbol"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>symbol</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>symbol</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #symbol}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleAutocolorscale", "fromProperty": "autocolorscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>autocolorscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #autocolorscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleCauto", "fromProperty": "cauto"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>cauto</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #cauto}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleReversescale", "fromProperty": "reversescale"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>reversescale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #reversescale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}, {"attributes": {"name": "toggleShowscale", "fromProperty": "showscale"}, "type": "method", "children": [{"attributes": {"text": "<p>Toggles the (computed) value of the boolean property <code>showscale</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #showscale}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the new value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "Boolean"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"name": "autocolorscale", "defaultValue": "true", "event": "changeAutocolorscale", "propertyType": "new", "apply": "_apply", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array. Determines whether the colorscale is a default palette (`autocolorscale: true`) or the palette determined by `marker.colorscale`. In case `colorscale` is unspecified or `autocolorscale` is true, the default  palette will be chosen according to whether numbers in the `color` array are all positive, all negative or mixed.</p>"}, "type": "desc"}]}, {"attributes": {"name": "cauto", "defaultValue": "true", "event": "changeCauto", "propertyType": "new", "apply": "_apply", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array and `cmin`, `cmax` are set by the user. In this case, it controls whether the range of colors in `colorscale` is mapped to the range of values in the `color` array (`cauto: true`), or the `cmin`/`cmax` values (`cauto: false`). Defaults to `false` when `cmin`, `cmax` are set by the user.</p>"}, "type": "desc"}]}, {"attributes": {"name": "cmax", "defaultValue": "null", "event": "changeCmax", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array. Sets the upper bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmin` must be set as well.</p>"}, "type": "desc"}]}, {"attributes": {"name": "cmin", "defaultValue": "null", "event": "changeCmin", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array. Sets the lower bound of the color domain. Value should be associated to the `marker.color` array index, and if set, `marker.cmax` must be set as well.</p>"}, "type": "desc"}]}, {"attributes": {"name": "color", "defaultValue": "null", "allowNull": "true", "propertyType": "new", "apply": "_apply", "event": "changeColor"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the marker color. It accepts either a specific color or an array of numbers that are mapped to the colorscale relative to the max and min values of the array or relative to `cmin` and `cmax` if set.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "null", "propertyType": "new", "event": "changeColorscale", "name": "colorscale"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the colorscale and only has an effect if `marker.color` is set to a numerical array. The colorscale must be an array containing arrays mapping a normalized value to an rgb, rgba, hex, hsl, hsv, or named color string. At minimum, a mapping for the lowest (0) and highest (1) values are required. For example, `[[0, &#8216;rgb(0,0,255)&#8217;, [1, &#8216;rgb(255,0,0)&#8217;]]`. To control the bounds of the colorscale in color space, use `marker.cmin` and `marker.cmax`. Alternatively, `colorscale` may be a palette name string of the following list: Greys, YlGnBu, Greens, YlOrRd, Bluered, RdBu, Reds, Blues, Picnic, Rainbow, Portland, Jet, Hot, Blackbody, Earth, Electric, Viridis</p>"}, "type": "desc"}]}, {"attributes": {"name": "maxdisplayed", "defaultValue": "0", "event": "changeMaxdisplayed", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets a maximum number of points to be drawn on the graph. <strong>0</strong> corresponds to no limit.</p>"}, "type": "desc"}]}, {"attributes": {"name": "opacity", "defaultValue": "1", "event": "changeOpacity", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the marker opacity.</p>"}, "type": "desc"}]}, {"attributes": {"name": "reversescale", "defaultValue": "false", "event": "changeReversescale", "propertyType": "new", "apply": "_apply", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array. Reverses the color mapping if true (`cmin` will correspond to the last color in the array and `cmax` will correspond to the first color).</p>"}, "type": "desc"}]}, {"attributes": {"name": "showscale", "defaultValue": "false", "event": "changeShowscale", "propertyType": "new", "apply": "_apply", "check": "Boolean"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.color` is set to a numerical array. Determines whether or not a colorbar is displayed.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "6", "propertyType": "new", "event": "changeSize", "name": "size"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the marker size (in px).</p>"}, "type": "desc"}]}, {"attributes": {"name": "sizemin", "defaultValue": "0", "event": "changeSizemin", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>as an effect only if `marker.size` is set to a numerical array. Sets the minimum size (in px) of the rendered marker points.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sizemode", "defaultValue": "\"diameter\"", "propertyType": "new", "possibleValues": "\"diameter\",\"area\"", "apply": "_apply", "event": "changeSizemode"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.size` is set to a numerical array. Sets the rule for which the data in `size` is converted to pixels.</p>"}, "type": "desc"}]}, {"attributes": {"name": "sizeref", "defaultValue": "1", "event": "changeSizeref", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Has an effect only if `marker.size` is set to a numerical array. Sets the scale factor used to determine the rendered size of marker points. Use with `sizemin` and `sizemode`.</p>"}, "type": "desc"}]}, {"attributes": {"apply": "_apply", "defaultValue": "\"circle\"", "propertyType": "new", "event": "changeSymbol", "name": "symbol"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the marker symbol type. Adding 100 is equivalent to appending <strong>-open</strong> to a symbol name. Adding 200 is equivalent to appending <strong>-dot</strong> to a symbol name. Adding 300 is equivalent to appending <strong>-open-dot</strong> or <strong>dot-open</strong> to a symbol name.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 168, "isCtor": true, "name": "ctor"}, "type": "method"}]}]}