{"attributes": {"name": "Legend", "packageName": "ae.chart.model.layout", "mixins": "qx.data.marshal.MEventBubbling", "superClass": "qx.core.Object", "fullName": "ae.chart.model.layout.Legend", "type": "class"}, "type": "class", "children": [{"attributes": {"text": "<p>Legend</p>"}, "type": "desc"}, {"attributes": {}, "type": "events", "children": [{"attributes": {"name": "changeBgcolor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #bgcolor}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeBordercolor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #bordercolor}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeBorderwidth"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #borderwidth}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeFont"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #font}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeOrientation"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #orientation}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeTracegroupgap"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #tracegroupgap}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeTraceorder"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #traceorder}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeX"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #x}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeXanchor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #xanchor}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeY"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #y}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}, {"attributes": {"name": "changeYanchor"}, "type": "event", "children": [{"attributes": {"text": "Fired on change of the property {@link #yanchor}."}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "qx.event.type.Data"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "methods", "children": [{"attributes": {"access": "protected", "line": 127, "name": "_apply"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>new value of the property</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}, {"attributes": {"name": "old"}, "type": "param", "children": [{"attributes": {"text": "<p>previous value of the property (null if it was not yet set).</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {}, "type": "apply", "children": [{"attributes": {"applies": "ae.chart.model.layout.Legend#bordercolor"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#yanchor"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#traceorder"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#xanchor"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#orientation"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#tracegroupgap"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#bgcolor"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#borderwidth"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#y"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#x"}, "type": "entry"}, {"attributes": {"applies": "ae.chart.model.layout.Legend#font"}, "type": "entry"}]}, {"attributes": {"text": "<p>Applies changes of the property value of the properties <code>bgcolor</code>, <code>bordercolor</code>, <code>borderwidth</code>, <code>font</code>, <code>orientation</code>, <code>tracegroupgap</code>, <code>traceorder</code>, <code>x</code>, <code>xanchor</code>, <code>y</code> and <code>yanchor</code>.</p>\n\n<p>For further details take a look at the property definitions: {@link #bgcolor}, {@link #bordercolor}, {@link #borderwidth}, {@link #font}, {@link #orientation}, {@link #tracegroupgap}, {@link #traceorder}, {@link #x}, {@link #xanchor}, {@link #y} and {@link #yanchor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "getBgcolor", "fromProperty": "bgcolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>bgcolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bgcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>bgcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBordercolor", "fromProperty": "bordercolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>bordercolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bordercolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>bordercolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getBorderwidth", "fromProperty": "borderwidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>borderwidth</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderwidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>borderwidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getFont", "fromProperty": "font"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>font</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #font}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>font</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTracegroupgap", "fromProperty": "tracegroupgap"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>tracegroupgap</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #tracegroupgap}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>tracegroupgap</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getTraceorder", "fromProperty": "traceorder"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>traceorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #traceorder}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>traceorder</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getX", "fromProperty": "x"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>x</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>x</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getXanchor", "fromProperty": "xanchor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>xanchor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #xanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>xanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getY", "fromProperty": "y"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>y</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>y</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "getYanchor", "fromProperty": "yanchor"}, "type": "method", "children": [{"attributes": {"text": "<p>Returns the (computed) value of the property <code>yanchor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #yanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>(Computed) value of <code>yanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBgcolor", "fromProperty": "bgcolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>bgcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>bgcolor</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #bgcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBordercolor", "fromProperty": "bordercolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>bordercolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>bordercolor</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #bordercolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initBorderwidth", "fromProperty": "borderwidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>borderwidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>borderwidth</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #borderwidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initFont", "fromProperty": "font"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>font</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>font</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #font}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>orientation</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTracegroupgap", "fromProperty": "tracegroupgap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>tracegroupgap</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>tracegroupgap</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #tracegroupgap}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initTraceorder", "fromProperty": "traceorder"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>traceorder</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>traceorder</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #traceorder}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initX", "fromProperty": "x"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>x</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>x</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #x}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initXanchor", "fromProperty": "xanchor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>xanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>xanchor</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #xanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initY", "fromProperty": "y"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>y</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>y</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #y}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"access": "protected", "name": "initYanchor", "fromProperty": "yanchor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>Initial value for property <code>yanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Calls the apply method and dispatches the change event of the property <code>yanchor</code>\nwith the default value defined by the class developer. This function can\nonly be called from the constructor of a class.</p>\n\n<p>For further details take a look at the property definition: {@link #yanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>the default value</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "resetBgcolor", "fromProperty": "bgcolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>bgcolor</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #bgcolor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetBordercolor", "fromProperty": "bordercolor"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>bordercolor</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #bordercolor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetBorderwidth", "fromProperty": "borderwidth"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>borderwidth</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #borderwidth}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetFont", "fromProperty": "font"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>font</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #font}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>orientation</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTracegroupgap", "fromProperty": "tracegroupgap"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>tracegroupgap</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #tracegroupgap}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetTraceorder", "fromProperty": "traceorder"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>traceorder</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #traceorder}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetX", "fromProperty": "x"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>x</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #x}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetXanchor", "fromProperty": "xanchor"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>xanchor</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #xanchor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetY", "fromProperty": "y"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>y</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #y}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "resetYanchor", "fromProperty": "yanchor"}, "type": "method", "children": [{"attributes": {"text": "<p>Resets the user value of the property <code>yanchor</code>.</p>\n\n<p>The computed value falls back to the next available value e.g. appearance, init or\ninheritance value depeneding on the property configuration and value availability.</p>\n\n<p>For further details take a look at the property definition: {@link #yanchor}.</p>"}, "type": "desc"}]}, {"attributes": {"name": "setBgcolor", "fromProperty": "bgcolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>bgcolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>bgcolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bgcolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBordercolor", "fromProperty": "bordercolor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>bordercolor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>bordercolor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #bordercolor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setBorderwidth", "fromProperty": "borderwidth"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>borderwidth</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>borderwidth</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #borderwidth}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setFont", "fromProperty": "font"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>font</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>font</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #font}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setOrientation", "fromProperty": "orientation"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>orientation</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>orientation</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #orientation}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTracegroupgap", "fromProperty": "tracegroupgap"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>tracegroupgap</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>tracegroupgap</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #tracegroupgap}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setTraceorder", "fromProperty": "traceorder"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>traceorder</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>traceorder</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #traceorder}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setX", "fromProperty": "x"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>x</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>x</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #x}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setXanchor", "fromProperty": "xanchor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>xanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>xanchor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #xanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setY", "fromProperty": "y"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>y</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>y</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #y}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"name": "setYanchor", "fromProperty": "yanchor"}, "type": "method", "children": [{"attributes": {}, "type": "params", "children": [{"attributes": {"name": "value"}, "type": "param", "children": [{"attributes": {"text": "<p>New value for property <code>yanchor</code>.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}, {"attributes": {"text": "<p>Sets the user value of the property <code>yanchor</code>.</p>\n\n<p>For further details take a look at the property definition: {@link #yanchor}.</p>"}, "type": "desc"}, {"attributes": {}, "type": "return", "children": [{"attributes": {"text": "<p>The unmodified incoming value.</p>"}, "type": "desc"}, {"attributes": {}, "type": "types", "children": [{"attributes": {"type": "var"}, "type": "entry"}]}]}]}]}, {"attributes": {}, "type": "properties", "children": [{"attributes": {"event": "changeBgcolor", "apply": "_apply", "check": "String", "name": "bgcolor", "propertyType": "new"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the legend background color.</p>"}, "type": "desc"}]}, {"attributes": {"name": "bordercolor", "defaultValue": "\"#444\"", "event": "changeBordercolor", "propertyType": "new", "apply": "_apply", "check": "String"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the color of the border enclosing the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "borderwidth", "defaultValue": "0", "event": "changeBorderwidth", "propertyType": "new", "apply": "_apply", "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the width (in px) of the border enclosing the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "font", "defaultValue": "null", "event": "changeFont", "allowNull": "true", "propertyType": "new", "apply": "_apply", "check": "ae.chart.model.Font"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the font used to text the legend items.</p>"}, "type": "desc"}]}, {"attributes": {"name": "orientation", "defaultValue": "\"v\"", "propertyType": "new", "apply": "_apply", "possibleValues": "\"h\",\"v\"", "event": "changeOrientation"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the orientation of the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "tracegroupgap", "defaultValue": "10", "event": "changeTracegroupgap", "propertyType": "new", "apply": "_apply", "check": "Integer"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the amount of vertical space (in px) between legend groups.</p>"}, "type": "desc"}]}, {"attributes": {"name": "traceorder", "defaultValue": "\"normal\"", "propertyType": "new", "apply": "_apply", "possibleValues": "\"normal\",\"reversed\",\"grouped\",\"grouped+reversed\"", "event": "changeTraceorder"}, "type": "property", "children": [{"attributes": {"text": "<p>Determines the order at which the legend items are displayed. If <strong>normal</strong>, the items are displayed top-to-bottom in the same order as the input data. If <strong>reversed</strong>, the items are displayed in the opposite order as <strong>normal</strong>. If <strong>grouped</strong>, the items are displayed in groups (when a trace `legendgroup` is provided). if <strong>grouped+reversed</strong>, the items are displayed in the opposite order as <strong>grouped</strong>.</p>"}, "type": "desc"}]}, {"attributes": {"name": "x", "defaultValue": "1.02", "event": "changeX", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the x position (in normalized coordinates) of the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "xanchor", "defaultValue": "\"left\"", "propertyType": "new", "apply": "_apply", "possibleValues": "\"auto\",\"left\",\"center\",\"right\"", "event": "changeXanchor"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the legend&#8217;s horizontal position anchor. This anchor binds the `x` position to the <strong>left</strong>, <strong>center</strong> or <strong>right</strong> of the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "y", "defaultValue": "1", "event": "changeY", "propertyType": "new", "apply": "_apply", "check": "Number"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the y position (in normalized coordinates) of the legend.</p>"}, "type": "desc"}]}, {"attributes": {"name": "yanchor", "defaultValue": "\"auto\"", "propertyType": "new", "apply": "_apply", "possibleValues": "\"auto\",\"top\",\"middle\",\"bottom\"", "event": "changeYanchor"}, "type": "property", "children": [{"attributes": {"text": "<p>Sets the legend&#8217;s vertical position anchor This anchor binds the `y` position to the <strong>top</strong>, <strong>middle</strong> or <strong>bottom</strong> of the legend.</p>"}, "type": "desc"}]}]}, {"attributes": {}, "type": "constructor", "children": [{"attributes": {"line": 122, "isCtor": true, "name": "ctor"}, "type": "method"}]}]}